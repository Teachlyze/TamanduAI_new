input {
  # Nginx access logs
  file {
    path => "/var/log/nginx/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "nginx_access"
  }

  # Application logs
  file {
    path => "/app/logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "app_logs"
  }

  # Docker logs
  journald {
    type => "docker"
    tags => ["docker"]
  }
}

filter {
  # Nginx access log parsing
  if [type] == "nginx_access" {
    grok {
      match => { "message" => "%{IPORHOST:client_ip} - %{USERNAME:remote_user} \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:response} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\"" }
    }

    useragent {
      source => "agent"
      target => "user_agent"
    }

    geoip {
      source => "client_ip"
      target => "geoip"
    }
  }

  # Application log parsing
  if [type] == "app_logs" {
    json {
      source => "message"
    }
  }

  # Docker log parsing
  if [type] == "docker" {
    json {
      source => "message"
    }
  }

  # Add timestamp
  if !("_timestamp") {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "tamanduai-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }

  # Console output for debugging
  stdout {
    codec => rubydebug
  }
}
