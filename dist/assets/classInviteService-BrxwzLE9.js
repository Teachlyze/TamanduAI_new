import{s as a,b5 as f,b6 as p}from"./main-BTTCSkdE.js";class I{static async createInvite(t,e={}){const{maxUses:s=10,expiresInHours:r=24*7,recipientEmail:n,role:c="student",invitationType:l=n?"email":"link"}=e,{data:{user:i}}=await a.auth.getUser();if(!i)throw new Error("User not authenticated");const[{data:o},{data:d}]=await Promise.all([a.from("classes").select("id, created_by, name, description").eq("id",t).single(),a.from("class_members").select("id").eq("class_id",t).eq("user_id",i.id).eq("role","teacher").maybeSingle()]);if(!o||o.created_by!==i.id&&!d)throw new Error("Unauthorized: Only class owner/teacher can create invites");const u=new Date;u.setHours(u.getHours()+r);const w=this.generateInvitationCode(),{data:_,error:v}=await a.from("class_invitations").insert([{class_id:t,created_by:i.id,invitation_code:w,invitation_type:l,target_email:n||null,role:c,max_uses:s,current_uses:0,expires_at:u.toISOString(),status:"active"}]).select().single();if(v)throw v;try{if(n){const{data:m}=await a.from("classes").select("name, created_by").eq("id",t).single(),{data:h}=await a.from("profiles").select("full_name").eq("id",m?.created_by).single(),g=`${window?.location?.origin||""}/join/${_.invitation_code}`;await f.sendClassInvite({to:n,className:m?.name||"Turma",teacherName:h?.full_name||"Professor",acceptUrl:g,language:"pt"})}}catch(m){console.warn("Falha ao enviar email de convite:",m)}return _}static async getInvitesByClass(t){const{data:e,error:s}=await a.from("class_invitations").select("*").eq("class_id",t).order("created_at",{ascending:!1});if(s)throw s;return e}static async revokeInvite(t){const{error:e}=await a.from("class_invitations").update({status:"cancelled"}).eq("id",t);if(e)throw e;return!0}static async getInviteDetails(t){const{data:e,error:s}=await a.from("class_invitations").select(`
        *,
        class:classes (
          id,
          name,
          description,
          created_by,
          teacher:profiles!created_by (
            id,
            full_name,
            avatar_url
          )
        )
      `).eq("invitation_code",t).single();if(s)throw new Error("Invalid invitation code");if(e.status!=="active")throw new Error("Invitation is no longer active");if(new Date(e.expires_at)<new Date)throw new Error("Invitation has expired");if(e.max_uses!=null&&e.current_uses>=e.max_uses)throw new Error("Invitation has reached maximum uses");return e}static async acceptInvite(t,e,s={}){const r=await this.getInviteDetails(t),{data:n}=await a.from("class_members").select("id").eq("class_id",r.class_id).eq("user_id",e).maybeSingle();if(n)return{success:!0,alreadyMember:!0,classId:r.class_id};const{error:c}=await a.from("class_members").insert([{class_id:r.class_id,user_id:e,role:r.role||"student",invited_by:r.created_by,joined_at:new Date().toISOString()}]);if(c)throw c;const{error:l}=await a.from("invitation_usages").insert([{invitation_id:r.id,user_id:e}]);l&&console.warn("Failed to record invitation usage",l);try{const{data:i}=await a.from("classes").select("id, name, created_by").eq("id",r.class_id).single(),{data:o}=await a.from("profiles").select("full_name, email").eq("id",e).single(),{data:d}=await a.from("profiles").select("email").eq("id",i?.created_by).single();i?.created_by&&d?.email&&(await f.sendClassInviteAccepted({to:d.email,studentName:o?.full_name||"Aluno",className:i?.name||"Turma",time:new Date().toLocaleString("pt-BR"),language:"pt"}),await p.send("classInviteAccepted",{userId:i.created_by,variables:{studentName:o?.full_name||"Aluno",className:i?.name||"Turma"},channelOverride:"push",metadata:{classId:i.id,inviteId:r.id}}))}catch(i){console.warn("Falha ao notificar convite aceito:",i)}return{success:!0}}static generateInvitationCode(){const t="ABCDEFGHJKLMNPQRSTUVWXYZ23456789";let e="";for(let s=0;s<8;s++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}static getInviteLink(t){return`${window?.location?.origin||"https://tamanduai.com"}/join/${t}`}}export{I as C};
