import{u as A,r as n,j as e,x as g,F as j,H as N,I as T,y,J as f,aO as D,aP as L,aQ as M,aR as F,aS as O,K as E,i as c,bf as r}from"./main-BTTCSkdE.js";import{u as V}from"./use-toast-COfaqMOp.js";const P=()=>{const{user:b}=A(),{toast:s}=V(),[o,h]=n.useState(!1),[l,S]=n.useState("info"),[d,x]=n.useState(""),[m,p]=n.useState(""),[w,v]=n.useState(""),C=[{value:"info",label:"Informação"},{value:"success",label:"Sucesso"},{value:"warning",label:"Aviso"},{value:"error",label:"Erro"},{value:"event",label:"Evento"},{value:"reminder",label:"Lembrete"}],t=a=>{const i=new Date().toLocaleTimeString();v(u=>`[${i}] ${a}
${u}`)},R=async a=>{if(a.preventDefault(),!d.trim()||!m.trim()){s({variant:"destructive",title:"Erro",description:"Por favor, preencha o título e a mensagem da notificação."});return}h(!0),t(`Enviando notificação de teste do tipo: ${l}...`);try{const i={title:d||`Notificação de teste (${l})`,message:m||"Esta é uma notificação de teste",type:l,action_url:"/dashboard"},u=await r.scheduleNotification(i);t(`✅ Notificação enviada com sucesso! ID: ${u.id}`),s({title:"Notificação de teste enviada",description:"Verifique a campainha de notificações no cabeçalho."}),x(""),p("")}catch(i){console.error("Erro ao enviar notificação de teste:",i),t(`❌ Erro ao enviar notificação: ${i.message}`),s({variant:"destructive",title:"Erro ao enviar notificação",description:i.message||"Ocorreu um erro ao enviar a notificação de teste."})}finally{h(!1)}},$=async()=>{try{t("Buscando notificações não lidas...");const a=await r.getNotifications({unreadOnly:!0,limit:1});if(a.length===0){t("❌ Nenhuma notificação não lida encontrada para teste.");return}const i=a[0];t(`Marcando notificação como lida: ${i.id}...`),await r.markAsRead(i.id),t("✅ Notificação marcada como lida com sucesso!"),s({title:"Teste de marcação como lida",description:"A notificação foi marcada como lida com sucesso."})}catch(a){console.error("Erro ao testar marcação como lida:",a),t(`❌ Erro ao marcar notificação como lida: ${a.message}`)}},I=async()=>{try{t("Buscando notificações para exclusão...");const a=await r.getNotifications({limit:1});if(a.length===0){t("❌ Nenhuma notificação encontrada para teste de exclusão.");return}const i=a[0];t(`Excluindo notificação: ${i.id}...`),await r.deleteNotification(i.id),t("✅ Notificação excluída com sucesso!"),s({title:"Teste de exclusão",description:"A notificação foi excluída com sucesso."})}catch(a){console.error("Erro ao testar exclusão:",a),t(`❌ Erro ao excluir notificação: ${a.message}`)}},k=()=>{t("Iniciando teste de notificações em tempo real..."),s({title:"Teste de notificação em tempo real",description:"Verifique a campainha de notificações em alguns segundos."}),setTimeout(()=>{const a=new CustomEvent("notification:test",{detail:{eventType:"INSERT",new:{id:`test-${Date.now()}`,title:"Notificação em Tempo Real",message:"Esta é uma notificação de teste em tempo real!",type:"info",is_read:!1,created_at:new Date().toISOString(),user_id:b?.id}}});window.dispatchEvent(a),t("✅ Evento de notificação em tempo real disparado!")},3e3)};return e.jsxs("div",{className:"container mx-auto px-4 py-8",children:[e.jsx("h1",{className:"text-3xl font-bold mb-6",children:"Teste de Notificações"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[e.jsxs(g,{children:[e.jsxs(j,{children:[e.jsx(N,{children:"Enviar Notificação de Teste"}),e.jsx(T,{children:"Envie uma notificação de teste para o painel de notificações"})]}),e.jsx(y,{children:e.jsxs("form",{onSubmit:R,className:"space-y-4",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx(f,{htmlFor:"notificationType",children:"Tipo de Notificação"}),e.jsxs(D,{value:l,onValueChange:S,children:[e.jsx(L,{children:e.jsx(M,{placeholder:"Selecione um tipo"})}),e.jsx(F,{children:C.map(a=>e.jsx(O,{value:a.value,children:a.label},a.value))})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(f,{htmlFor:"title",children:"Título"}),e.jsx(E,{id:"title",placeholder:"Título da notificação",value:d,onChange:a=>x(a.target.value)})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(f,{htmlFor:"message",children:"Mensagem"}),e.jsx(E,{id:"message",placeholder:"Mensagem da notificação",value:m,onChange:a=>p(a.target.value)})]}),e.jsx(c,{type:"submit",disabled:o,className:"w-full",children:o?"Enviando...":"Enviar Notificação de Teste"})]})})]}),e.jsxs(g,{children:[e.jsxs(j,{children:[e.jsx(N,{children:"Testes de Funcionalidade"}),e.jsx(T,{children:"Teste as funcionalidades do sistema de notificações"})]}),e.jsxs(y,{className:"space-y-4",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx("h3",{className:"font-medium",children:"Testes de API"}),e.jsxs("div",{className:"flex flex-wrap gap-2",children:[e.jsx(c,{variant:"outline",onClick:$,disabled:o,children:"Testar Marcar como Lida"}),e.jsx(c,{variant:"outline",onClick:I,disabled:o,children:"Testar Exclusão"}),e.jsx(c,{variant:"outline",onClick:k,disabled:o,children:"Testar Tempo Real"})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx("h3",{className:"font-medium",children:"Registro de Testes"}),e.jsx("div",{className:"bg-gray-50 dark:bg-gray-800 p-3 rounded-md h-48 overflow-y-auto font-mono text-sm",children:w||"Nenhum teste executado ainda."}),e.jsx(c,{variant:"ghost",size:"sm",onClick:()=>v(""),className:"text-xs",children:"Limpar Registros"})]})]})]})]})]})};export{P as default};
