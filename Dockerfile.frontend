# Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk update && apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files
COPY package.json package-lock.json* ./

# Install all dependencies including devDependencies for building
# Skip prepare script during install
RUN npm ci --prefer-offline --no-audit --progress=false --ignore-scripts

# Copy the rest of the application
COPY . .

# Build the application
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY
ARG VITE_APP_URL
# Make sure Vite sees these at build time
ENV VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
ENV VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
ENV VITE_APP_URL=${VITE_APP_URL}
ENV NODE_ENV=production

# Run build with verbose output and error handling
RUN set -euo pipefail && \
    echo "=== Starting Docker build debug ===" && \
    echo "Current directory: $(pwd)" && \
    echo "Files in current directory:" && \
    ls -la && \
    echo "Environment variables:" && \
    (env | grep VITE || echo "WARNING: No VITE variables found") && \
    echo "Node version: $(node --version)" && \
    echo "NPM version: $(npm --version)" && \
    echo "Starting npm run build..." && \
    (npm run build 2>&1 | tee build.log) || (echo "Build failed. Showing log:" && tail -n +1 build.log && exit 1) && \
    echo "Build completed successfully" && \
    if [ -d /app/dist ]; then echo "Checking dist folder:" && ls -la /app/dist; else echo "dist folder not found" && exit 1; fi && \
    echo "Checking assets folder:" && \
    (ls -la /app/dist/assets || echo "No assets folder found") && \
    echo "=== Build verification complete ==="

# Production stage (static)
FROM nginx:1.25-alpine AS runner

# Copy built assets to Nginx html directory
COPY --from=builder /app/dist /usr/share/nginx/html

# Verify files were copied and dist folder exists
RUN echo "Verifying dist folder was copied:" && \
    ls -la /usr/share/nginx/html && \
    test -d /usr/share/nginx/html && \
    test -f /usr/share/nginx/html/index.html && \
    echo "Verification successful - dist folder copied correctly"

# Copy custom nginx config with SPA fallback
COPY nginx.conf /etc/nginx/nginx.conf

# Test nginx config
RUN nginx -t

# Expose desired port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=5s CMD wget --no-verbose --tries=1 --spider http://127.0.0.1:3000/ || exit 1

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
